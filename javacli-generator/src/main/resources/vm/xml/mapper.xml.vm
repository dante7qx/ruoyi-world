<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">

#set ($existDelFlag = false)
#foreach ($column in $columns)
	#if ($column.columnName == 'del_flag')
		#set ($existDelFlag = true)
    	#break
	#end
#end
#if($existDelFlag)
    <delete id="delete${ClassName}By${pkColumn.capJavaField}">
	update ${tableName} set del_flag = 1, update_by = #{deleteBy}, update_time = sysdate() where ${pkColumn.columnName} = #{${pkColumn.javaField}}
    </delete>
#end

#if($existDelFlag)
    <delete id="delete${ClassName}By${pkColumn.capJavaField}s">
        update ${tableName} set del_flag = 1, update_by = #{deleteBy}, update_time = sysdate() where ${pkColumn.columnName} in 
        <foreach item="${pkColumn.javaField}" collection="${pkColumn.javaField}s" open="(" separator="," close=")">
            #{${pkColumn.javaField}}
        </foreach>
    </delete>
#end
#if($table.sub)
    
    <delete id="delete${subClassName}By${subTableFkClassName}s" parameterType="String">
        delete from ${subTableName} where ${subTableFkName} in 
        <foreach item="${subTableFkclassName}" collection="array" open="(" separator="," close=")">
            #{${subTableFkclassName}}
        </foreach>
    </delete>

    <delete id="delete${subClassName}By${subTableFkClassName}" parameterType="${pkColumn.javaType}">
		delete from ${subTableName} where ${subTableFkName} = #{${subTableFkclassName}}
    </delete>

    <insert id="batch${subClassName}">
        insert into ${subTableName}(#foreach($column in $subTable.columns) $column.columnName#if($foreach.count != $subTable.columns.size()),#end#end) values
		<foreach item="item" index="index" collection="list" separator=",">
            (#foreach($column in $subTable.columns) #{item.$column.javaField}#if($foreach.count != $subTable.columns.size()),#end#end)
        </foreach>
    </insert>
#end

    <insert id="batchInsert${ClassName}" parameterType="java.util.List">
        insert into ${tableName} (#foreach($column in $columns)#if($column.columnName != $pkColumn.columnName && $column.columnName != "del_flag" && $column.columnName != "update_by" && $column.columnName != "update_time")$column.columnName#if($column.columnName != "create_time"), #end#end#end)
        values
        <foreach item="item" collection="list" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
				#foreach($column in $columns) #if($column.columnName != $pkColumn.columnName && $column.columnName != "del_flag" && $column.columnName != "update_by" && $column.columnName != "update_time")#{item.$column.javaField}#if($column.columnName != "create_time"),#end#end#end 

            </trim>
        </foreach>
    </insert>

#set($uniqueCol=$!$columns.get(1).columnName)
#set($uniqueField=$!$columns.get(1).javaField)
    <update id="batchUpdate${ClassName}" parameterType="java.util.List">
        update ${tableName}
        <trim prefix="SET" suffixOverrides=",">
#foreach($column in $columns)
#if($column.columnName != $pkColumn.columnName && $column.columnName != "create_by" && $column.columnName != "create_time" && $column.columnName != "del_flag")
            $column.columnName = 
            <foreach collection="list" item="item" separator=" " open="CASE ${uniqueCol}" close="END">
                WHEN #{item.${uniqueField}} THEN #{item.$column.javaField}
            </foreach>#if($column.columnName != "update_time"),#end
#end
#end
            where ${uniqueCol} in
            <foreach collection="list" item="item" separator="," open="(" close=")">
                #{item.${uniqueField}}
            </foreach>
        </trim>
    </update>
    
</mapper>
