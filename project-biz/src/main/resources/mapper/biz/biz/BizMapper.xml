<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risun.biz.biz.mapper.BizMapper">
    
    <resultMap type="Biz" id="BizResult">
        <result property="bizId"    column="biz_id"    />
        <result property="bizName"    column="biz_name"    />
        <result property="bizTime"    column="biz_time"    />
        <result property="attachment"    column="attachment"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBizVo">
        select biz_id, biz_name, biz_time, attachment, create_by, create_time, update_by, update_time from t_biz
    </sql>

    <select id="selectBizList" parameterType="Biz" resultMap="BizResult">
        <include refid="selectBizVo"/>
        <where>  
            <if test="bizName != null  and bizName != ''"> and biz_name like concat('%', #{bizName}, '%')</if>
            <if test="params.beginBizTime != null and params.beginBizTime != '' and params.endBizTime != null and params.endBizTime != ''"> and biz_time between #{params.beginBizTime} and #{params.endBizTime}</if>
            <if test="attachment != null  and attachment != ''"> and attachment = #{attachment}</if>
        </where>
    </select>
    
    <select id="selectBizByBizId" parameterType="Long" resultMap="BizResult">
        <include refid="selectBizVo"/>
        where biz_id = #{bizId}
    </select>
        
    <insert id="insertBiz" parameterType="Biz" useGeneratedKeys="true" keyProperty="bizId">
        insert into t_biz
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bizName != null">biz_name,</if>
            <if test="bizTime != null">biz_time,</if>
            <if test="attachment != null">attachment,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bizName != null">#{bizName},</if>
            <if test="bizTime != null">#{bizTime},</if>
            <if test="attachment != null">#{attachment},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBiz" parameterType="Biz">
        update t_biz
        <trim prefix="SET" suffixOverrides=",">
            <if test="bizName != null">biz_name = #{bizName},</if>
            <if test="bizTime != null">biz_time = #{bizTime},</if>
            <if test="attachment != null">attachment = #{attachment},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where biz_id = #{bizId}
    </update>

    <delete id="deleteBizByBizId" parameterType="Long">
        delete from t_biz where biz_id = #{bizId}
    </delete>

    <delete id="deleteBizByBizIds" parameterType="String">
        delete from t_biz where biz_id in 
        <foreach item="bizId" collection="array" open="(" separator="," close=")">
            #{bizId}
        </foreach>
    </delete>
</mapper>