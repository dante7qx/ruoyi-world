<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risun.flowable.mapper.FlowDemoMapper">
    
    <resultMap type="FlowDemo" id="FlowDemoResult">
        <result property="demoId"    column="demo_id"    />
        <result property="leaveUserId"    column="leave_user_id"    />
        <result property="uid"    column="uid"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="leaveReason"    column="leave_reason"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <association property="flowMonitor" javaType="SysFlowBizMonitor" resultMap="bizMonitorResult" />
       
    </resultMap>
    
    <resultMap id="bizMonitorResult" type="SysFlowBizMonitor">
        <id     property="monitorId"    column="monitor_id"     />
        <result property="procInstId"    column="proc_inst_id"    />
        <result property="status"    column="status"    />
        <result property="passed"    column="passed"    />
        <result property="finished"    column="finished"    />
        <result property="commited"    column="commited"    />
    </resultMap>

    <sql id="selectFlowDemoVo">
        select 
        	t.demo_id, t.leave_user_id, t.uid, t.start_time, t.end_time, t.leave_reason, t.create_by, t.create_time, t.update_by, t.update_time,
        	t1.monitor_id, t1.proc_inst_id, t1.status, t1.passed, t1.finished, t1.commited
        from t_flow_demo t
        left join sys_flow_biz_monitor t1 on t1.biz_uid = t.uid
    </sql>

    <select id="selectFlowDemoList" parameterType="FlowDemo" resultMap="FlowDemoResult">
        <include refid="selectFlowDemoVo"/>
        <where>  
            <if test="leaveUserId != null "> and t.leave_user_id = #{leaveUserId}</if>
            <if test="uid != null  and uid != ''"> and t.uid = #{uid}</if>
            <if test="params.beginStartTime != null and params.beginStartTime != '' and params.endStartTime != null and params.endStartTime != ''"> and t.start_time between #{params.beginStartTime} and #{params.endStartTime}</if>
            <if test="params.beginEndTime != null and params.beginEndTime != '' and params.endEndTime != null and params.endEndTime != ''"> and t.end_time between #{params.beginEndTime} and #{params.endEndTime}</if>
            <if test="leaveReason != null  and leaveReason != ''"> and t.leave_reason like concat('%', #{leaveReason}, '%')</if>
        </where>
    </select>
    
    <select id="selectFlowDemoByDemoId" parameterType="Long" resultMap="FlowDemoResult">
        <include refid="selectFlowDemoVo"/>
        where t.demo_id = #{demoId}
    </select>
        
    <insert id="insertFlowDemo" parameterType="FlowDemo" useGeneratedKeys="true" keyProperty="demoId">
        insert into t_flow_demo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="leaveUserId != null">leave_user_id,</if>
            <if test="uid != null and uid != ''">uid,</if>
            <if test="startTime != null">start_time,</if>
            <if test="endTime != null">end_time,</if>
            <if test="leaveReason != null">leave_reason,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="leaveUserId != null">#{leaveUserId},</if>
            <if test="uid != null and uid != ''">#{uid},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="endTime != null">#{endTime},</if>
            <if test="leaveReason != null">#{leaveReason},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateFlowDemo" parameterType="FlowDemo">
        update t_flow_demo
        <trim prefix="SET" suffixOverrides=",">
            <if test="leaveUserId != null">leave_user_id = #{leaveUserId},</if>
            <if test="uid != null and uid != ''">uid = #{uid},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="endTime != null">end_time = #{endTime},</if>
            <if test="leaveReason != null">leave_reason = #{leaveReason},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where demo_id = #{demoId}
    </update>

    <delete id="deleteFlowDemoByDemoId" parameterType="Long">
        delete from t_flow_demo where demo_id = #{demoId}
    </delete>

    <delete id="deleteFlowDemoByDemoIds" parameterType="String">
        delete from t_flow_demo where demo_id in 
        <foreach item="demoId" collection="array" open="(" separator="," close=")">
            #{demoId}
        </foreach>
    </delete>
</mapper>