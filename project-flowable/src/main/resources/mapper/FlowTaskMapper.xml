<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risun.flowable.mapper.FlowTaskMapper">

    <select id="selectFlowTodoList" parameterType="com.risun.flowable.domain.vo.FlowQueryVo" resultType="com.risun.flowable.domain.dto.FlowTaskDto">
    	select tx.* from (
			select
				t.id_ as taskId,
				t.execution_id_ as executionId,
				t.name_ as taskName,
				t.task_def_key_ as taskDefKey,
				t.create_time_ as createTime,
				t0.business_key_ as bizId,
				(select v.text_ from act_ru_variable v where v.proc_inst_id_ = t.proc_inst_id_ and v.name_ = 'businessUID' limit 1) as bizUid,
				(select v.text_ from act_ru_variable v where v.proc_inst_id_ = t.proc_inst_id_ and v.name_ = 'businessDetailDesc' limit 1) as bizDetail,
				t0.business_status_ as bizModel,
				t1.deployment_id_ as deployId,
				t1.id_ as procDefId,
				t1.key_ as procDefKey,
				t1.version_ as procDefVersion,
				t1.name_ as procDefName,
				t1.category_ as category,
				t.proc_inst_id_ as procInsId,
				t2.user_id_ as startUserId,
				u.nick_name as startUserName,
				d.dept_name as startDeptName
			from
				act_ru_task t
			inner join act_ru_execution t0 on t0.proc_inst_id_ = t.proc_inst_id_
			left join act_re_procdef t1 on t.proc_def_id_ = t1.id_  
			left join act_ru_identitylink t2 on t2.proc_inst_id_ = t.proc_inst_id_ and t2.type_ = 'starter'
			left join sys_user u on u.user_id = t2.user_id_
			left join sys_dept d on u.dept_id = d.dept_id
			where
				t.suspension_state_ = 1 and t0.business_key_ is not null
				and 
				((
					t.assignee_ = #{userId} 
					or (
						t.owner_ = #{userId} 
						and t.delegation_ = 'PENDING'
						and exists (
							select v.LONG_ from act_ru_variable v where v.PROC_INST_ID_ = t.PROC_INST_ID_ and v.NAME_ = 'TASK_KEEP_TODO' and v.LONG_ = 1
						)
					)
					or ( 
						t.assignee_ is null
						and exists(
							select link.id_
							from act_ru_identitylink link
							where
								link.task_id_ = t.id_
								and link.type_ = 'candidate'
								and (
									link.user_id_ = #{userId} 
									<if test="null != userGroupIds and userGroupIds.size > 0">
										or 
										(   
											link.group_id_ in 
											<foreach item="groupId" collection="userGroupIds" open="(" separator="," close=")">
									            #{groupId}
									        </foreach>
										) 
									</if>
								)
						)
					)
				))
				<if test="flowCategory != null and flowCategory != ''">
	               and t1.category_ = #{flowCategory}
	            </if>
				<if test="flowName != null and flowName != ''">
	               and t.name_ like concat('%', #{flowName}, '%')
	            </if>
	            <if test="bizModel != null and bizModel != ''">
		           and t0.business_status_ = #{bizModel}
		        </if>
	            <if test="startTime != null and endTime != null"> 
	            	and t.create_time_ between #{startTime} and #{endTime}
	            </if>
			
		) tx 
		<where>
			<if test="bizDetail != null and bizDetail != ''">
               and tx.bizDetail like concat('%', #{bizDetail}, '%')
            </if>
		</where>
		order by tx.createTime desc	
    </select>
    
    <select id="selectFlowDoneList" parameterType="com.risun.flowable.domain.vo.FlowQueryVo" resultType="com.risun.flowable.domain.dto.FlowTaskDto">
		select tx.* from (
			select 
				distinct 
				t.id_ as taskId,
				t.execution_id_ as executionId,
				t.name_ as taskName,
				t.task_def_key_ as taskDefKey,
				t.start_time_ as createTime,
				t.end_time_ as endTime,  
				t1.business_key_ as bizId,
				(select v.text_ from act_hi_varinst v where v.proc_inst_id_ = t1.proc_inst_id_ and v.name_ = 'businessUID' limit 1) as bizUid,
				(select v.text_ from act_hi_varinst v where v.proc_inst_id_ = t1.proc_inst_id_ and v.name_ = 'businessDetailDesc' limit 1) as bizDetail,
				t1.business_status_ as bizModel,
				t2.deployment_id_ as deployId,
				t2.id_ as procDefId,
				t2.key_ as procDefKey,
				t2.version_ as procDefVersion,
				t2.name_ as procDefName,
				t2.category_ as category,
				t1.proc_inst_id_ AS procInsId,
				t3.user_id_ as startUserId,
				u.nick_name as startUserName,
				d.dept_name as startDeptName
			from act_hi_taskinst t
			inner join act_hi_procinst t1 on t1.proc_inst_id_ = t.proc_inst_id_
			left join act_re_procdef t2 on t2.id_ = t1.proc_def_id_
			left join act_hi_identitylink t3 on t3.proc_inst_id_ = t.proc_inst_id_ and t3.type_ = 'starter'
			left join sys_user u on u.user_id = t3.user_id_
			left join sys_dept d on u.dept_id = d.dept_id
			where 
				t.end_time_  is not null 
				and (t.assignee_ = #{userId} or t.owner_ = #{userId} or #{isAdmin} = 1)
				<if test="flowCategory != null and flowCategory != ''">
	               and t2.category_ = #{flowCategory}
	            </if>
				<if test="flowName != null and flowName != ''">
	               and t.name_ like concat('%', #{flowName}, '%')
	            </if>
	            <if test="bizModel != null and bizModel != ''">
	               and t1.business_status_ = #{bizModel}
	            </if>
	            <if test="startTime != null and endTime != null"> 
	            	and t.end_time_ between #{startTime} and #{endTime}
	            </if>
			having 1=1 order by t.end_time_ desc
		) tx 
		<where>
			<if test="bizDetail != null and bizDetail != ''">
               and tx.bizDetail like concat('%', #{bizDetail}, '%')
            </if>
		</where>
		group by tx.procInsId, tx.bizUid
		order by tx.endTime desc
	</select>
	
	<select id="selectFlowFinishList" parameterType="com.risun.flowable.domain.vo.FlowQueryVo" resultType="com.risun.flowable.domain.dto.FlowTaskDto">
		select tx.* from (
			select 
				distinct 
				t.id_ as taskId,
				t.execution_id_ as executionId,
				m.status as taskName,
				t.task_def_key_ as taskDefKey,
				(select ht.start_time_ from act_hi_taskinst ht where ht.proc_inst_id_ = t.proc_inst_id_ order by ht.start_time_ asc limit 1) as createTime,
				t.end_time_ as endTime,  
				t1.business_key_ as bizId,
				(select v.text_ from act_hi_varinst v where v.proc_inst_id_ = t1.proc_inst_id_ and v.name_ = 'businessUID' limit 1) as bizUid,
				(select v.text_ from act_hi_varinst v where v.proc_inst_id_ = t1.proc_inst_id_ and v.name_ = 'businessDetailDesc' limit 1) as bizDetail,
				t1.business_status_ as bizModel,
				t2.deployment_id_ as deployId,
				t2.id_ as procDefId,
				t2.key_ as procDefKey,
				t2.version_ as procDefVersion,
				t2.name_ as procDefName,
				t2.category_ as category,
				t1.proc_inst_id_ AS procInsId,
				t3.user_id_ as startUserId,
				u.nick_name as startUserName,
				d.dept_name as startDeptName,
				m.passed as passed
			from act_hi_taskinst t
			inner join act_hi_procinst t1 on t1.proc_inst_id_ = t.proc_inst_id_
			left join act_re_procdef t2 on t2.id_ = t1.proc_def_id_
			left join act_hi_identitylink t3 on t3.proc_inst_id_ = t.proc_inst_id_ and t3.type_ = 'starter'
			left join sys_user u on u.user_id = t3.user_id_
			left join sys_dept d on u.dept_id = d.dept_id
			left join sys_flow_biz_monitor m on m.proc_inst_id = t.proc_inst_id_
			where 
				t.end_time_  is not null 
				and m.finished = 1
				and (
					exists ( select 1 from act_hi_identitylink l where l.proc_inst_id_ = t.proc_inst_id_  and l.user_id_ = #{userId} )
					or 
					#{isAdmin} = 1
				)
				<if test="flowCategory != null and flowCategory != ''">
	               and t2.category_ = #{flowCategory}
	            </if>
	            <if test="flowName != null and flowName != ''">
	               and t.name_ like concat('%', #{flowName}, '%')
	            </if>
	            <if test="bizModel != null and bizModel != ''">
	               and t1.business_status_ = #{bizModel}
	            </if>
	            <if test="startTime != null and endTime != null"> 
	            	and t.end_time_ between #{startTime} and #{endTime}
	            </if>
			having 1=1 order by t.end_time_ desc
		) tx 
		<where>
			<if test="bizDetail != null and bizDetail != ''">
            	and tx.bizDetail like concat('%', #{bizDetail}, '%')
            </if>
		</where>
		group by tx.procInsId, tx.bizUid
		order by tx.endTime desc
	</select>
	
	<select id="selectFlowAttachmentList" parameterType="String" resultType="com.risun.flowable.domain.dto.FlowAttachmentDto">
		select
			t.ID_ as id,
			t1.ID_ as taskId,
			t1.NAME_ as taskName,
			u.nick_name as userNickName,
			d.dept_name as userDeptName,
			t.URL_ as url,
			t.TIME_ as createTime
		from
			act_hi_attachment t
		inner join act_hi_taskinst t1 on
			t1.ID_ = t.TASK_ID_
		inner join sys_user u on
			(concat(u.user_id, '') = concat(t.user_id_, '') or u.user_name = concat(t.user_id_, ''))
		inner join sys_dept d on
			d.dept_id = u.dept_id
		where t.PROC_INST_ID_ = #{procInsId}
		order by
			t.TIME_ asc
	</select>

</mapper>