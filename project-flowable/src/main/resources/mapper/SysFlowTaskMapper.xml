<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risun.flowable.mapper.SysFlowTaskMapper">
	
	<select id="selectSysFlowTaskList" parameterType="com.risun.flowable.domain.vo.SysFlowTaskQueryVo" resultType="com.risun.flowable.domain.vo.SysFlowTaskVo">
		select 
        	t.biz_uid as bizUid, 
        	t.biz_desc as bizDesc,
        	t.flow_num as flowNum, 
        	t.flow_date_num  as flowDateNum,
        	t.flow_type as flowType,
        	t.commit_user_id as userId,
        	u.nick_name as userName,
        	d.dept_name as userDept,
        	t.proc_inst_id as procInstId,
        	t.proc_def_id as procDefId,
        	p.deployment_id_ as procDeployId,
        	t.task_id as taskId,
        	t.task_def_id as taskDefId,
        	t.task_def_name as taskDefName,
        	t.task_def_desc as taskDefDesc,
        	t.commit_time as commitTime, 
        	t.flow_status as flowStatus, 
        	t.flow_result as flowResult,
        	t.first_task as firstTask,
        	(select count(r.record_id) from sys_flow_record r where r.biz_uid = t.biz_uid limit 3) as recordCount
       	from sys_flow_trace t 
       	left join sys_user u on u.user_id = t.commit_user_id
       	left join sys_dept d on d.dept_id = u.dept_id
       	left join act_re_procdef p on p.id_ = t.proc_def_id
       	<where>  
           	<if test="starterUserId != null"> and t.commit_user_id = #{starterUserId}</if>
           	<if test="starterUserId == null"> and t.proc_inst_id is not null</if>
           	<if test="starterUserName != null  and starterUserName != ''"> and u.nick_name like concat('%', #{starterUserName}, '%')</if>
           	<if test="deptIds != null and deptIds.length > 0">
				and u.dept_id in 
			    <foreach collection="deptIds" item="deptId" open="(" separator=","  close=")">
			    	#{deptId}
			    </foreach>
			</if>
			<if test="flowType != null"> and t.flow_type = #{flowType}</if>
			<if test="startTime != null and endTime != null"> 
				and t.commit_time between #{startTime} and #{endTime}
			</if>
			<if test="flowStatus != null"> and t.flow_status = #{flowStatus}</if>
			<if test="flowResult != null and flowResult == 1"> and (t.flow_result = #{flowResult} or t.flow_result is null)</if>
			<if test="flowResult != null and flowResult == 0"> and t.flow_result = #{flowResult}</if>
			<if test="handledUserId != null"> 
				and exists (select 1 from sys_flow_record r where r.biz_uid = t.biz_uid and r.user_id = #{handledUserId} and r.end_time is not null)
			</if>
		</where>
		order by t.flow_num desc
	</select>

	<select id="selectSysFlowTaskTodoList" parameterType="com.risun.flowable.domain.vo.SysFlowTaskQueryVo" resultType="com.risun.flowable.domain.vo.SysFlowTaskVo">
		select 
			t1.biz_uid as bizUid, 
        	t1.biz_desc as bizDesc,
        	t1.flow_num as flowNum, 
        	t1.flow_date_num  as flowDateNum,
        	t1.flow_type as flowType,
        	t1.commit_user_id as userId,
        	u.nick_name as userName,
        	d.dept_name as userDept,
        	t1.proc_inst_id as procInstId,
        	t1.proc_def_id as procDefId,
        	p.deployment_id_ as procDeployId,
        	t.ID_ as taskId,
        	t1.task_def_id as taskDefId,
        	t1.task_def_name as taskDefName,
        	t1.task_def_desc as taskDefDesc,
        	t1.commit_time as commitTime, 
        	t1.flow_status as flowStatus, 
        	t1.flow_result as flowResult,
        	t1.first_task as firstTask
		from
			act_ru_task t
		inner join sys_flow_trace t1 on t1.proc_inst_id = t.proc_inst_id_ 
		inner join sys_flow_record r on r.task_id = t.id_ and r.end_time is null
		inner join act_re_procdef p on t1.proc_def_id = p.id_
		left join sys_user u on u.user_id = t1.commit_user_id
		left join sys_dept d on d.dept_id = u.dept_id
		where
		 t.assignee_ = #{handledUserId}
		 or 
		 (
		 	 t.assignee_ is null
					and exists(
						select
							link.id_
						from
							act_ru_identitylink link
						where
							link.task_id_ = t.id_
							and link.type_ = 'candidate'
							and (
								(link.user_id_ = #{handledUserId} and r.user_id = #{handledUserId})
								or 
								(r.group_id is not null and exists(select 1 from sys_flow_group_user ur where ur.user_id = #{handledUserId} and ur.group_id = link.group_id_))
							)
					)
		 )
	</select>
	
	<!-- 查询流程发起人 -->
    <select id="selectFlowStarterByProcInstId" parameterType="String" resultType="String">
    	select user_id_  from act_hi_identitylink where proc_inst_id_ = #{procInstId} and type_ = 'starter' limit 1
    </select>

</mapper>