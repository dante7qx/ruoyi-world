<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.risun.flowable.mapper.SysFlowTypeMapper">
    
    <resultMap type="SysFlowType" id="SysFlowTypeResult">
        <result property="typeId"    column="type_id"    />
        <result property="typeName"    column="type_name"    />
        <result property="flowCategory"    column="flow_category"    />
        <result property="flowGroupId"    column="flow_group_id"    />
        <result property="flowGroupName"    column="flow_group_name"    />
        <result property="flowDefKey"    column="flow_def_key"    />
        <result property="flowDefId"    column="flow_def_id"    />
        <result property="flowDefName"    column="flow_def_name"    />
        <result property="flowDeployId"    column="flow_deploy_id"    />
        <result property="orderNum"    column="order_num"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSysFlowTypeVo">
        select 
			t.type_id,
			t.type_name,
			t.flow_group_id,
			t.flow_def_key,
			t.order_num,
			t.remark,
			t.create_by,
			t.create_time,
			t.update_by,
			t.update_time,
			g.group_name as flow_group_name,
			p.category_  as flow_category,
			p.id_ as flow_def_id,
			p.name_ as flow_def_name,
			p.deployment_id_ as flow_deploy_id
		from
			sys_flow_type t
		left join sys_flow_group g on g.group_id = t.flow_group_id
		left join act_re_procdef p on p.KEY_ = t.flow_def_key and p.version_ = (select max(version_) from act_re_procdef where key_ = p.key_ and ((tenant_id_ is not null and tenant_id_ = p.tenant_id_) or (tenant_id_ is null and p.tenant_id_ is null))) and (p.suspension_state_ = 1)
    </sql>

    <select id="selectSysFlowTypeList" parameterType="SysFlowType" resultMap="SysFlowTypeResult">
        <include refid="selectSysFlowTypeVo"/>
        <where>  
            <if test="typeName != null  and typeName != ''"> and type_name = #{typeName}</if>
            <if test="flowCategory != null  and flowCategory != ''"> and flow_category = #{flowCategory}</if>
            <if test="flowGroupId != null "> and flow_group_id = #{flowGroupId}</if>
            <if test="flowDefKey != null  and flowDefKey != ''"> and flow_def_key = #{flowDefKey}</if>
            <if test="flowDeployId != null  and flowDeployId != ''"> and flow_deploy_id = #{flowDeployId}</if>
            <if test="orderNum != null "> and order_num = #{orderNum}</if>
            <if test="loginUserId != null "> and exists (select 1 from sys_flow_group_user gu where gu.group_id = t.flow_group_id and gu.user_id = #{loginUserId})</if>
        </where>
        order by t.type_name asc, t.order_num asc
    </select>
    
    <select id="selectSysFlowTypeByTypeId" parameterType="Long" resultMap="SysFlowTypeResult">
        <include refid="selectSysFlowTypeVo"/>
        where type_id = #{typeId}
    </select>
        
    <insert id="insertSysFlowType" parameterType="SysFlowType" useGeneratedKeys="true" keyProperty="typeId">
        insert into sys_flow_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="typeName != null">type_name,</if>
            <if test="flowGroupId != null">flow_group_id,</if>
            <if test="flowDefKey != null">flow_def_key,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="typeName != null">#{typeName},</if>
            <if test="flowGroupId != null">#{flowGroupId},</if>
            <if test="flowDefKey != null">#{flowDefKey},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSysFlowType" parameterType="SysFlowType">
        update sys_flow_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="typeName != null">type_name = #{typeName},</if>
            <if test="flowGroupId != null">flow_group_id = #{flowGroupId},</if>
            <if test="flowDefKey != null">flow_def_key = #{flowDefKey},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where type_id = #{typeId}
    </update>

    <delete id="deleteSysFlowTypeByTypeId" parameterType="Long">
        delete from sys_flow_type where type_id = #{typeId}
    </delete>

    <delete id="deleteSysFlowTypeByTypeIds" parameterType="String">
        delete from sys_flow_type where type_id in 
        <foreach item="typeId" collection="array" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </delete>
</mapper>